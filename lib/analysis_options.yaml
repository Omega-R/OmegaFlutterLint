analyzer:
strong-mode:
implicit-casts: false
implicit-dynamic: false
errors:
invalid_annotation_target: ignore
todo: ignore
parameter_assignments: warning
exclude:
  - 'lib/**/*.g.dart'
  - '**/*.freezed.dart'
  - 'lib/generated_plugin_registrant.dart'
  - 'build/**'
linter:
rules:
  # STYLE
  - camel_case_types
  - camel_case_extensions
  - library_names
  - file_names
  - library_prefixes
  - always_use_package_imports
  - non_constant_identifier_names
  - constant_identifier_names # prefer
  - directives_ordering
  - lines_longer_than_80_chars # avoid
  - curly_braces_in_flow_control_structures
  # DOCUMENTATION
  - slash_for_doc_comments
  - package_api_docs # prefer
  # - public_member_api_docs # prefer -- only used in external packages
  # - comment_references # Unused because https://github.com/dart-lang/sdk/issues/36974
  # USAGE
  - implementation_imports
  # - avoid_relative_lib_imports # avoid using relative, but it is optional
  - prefer_adjacent_string_concatenation
  - prefer_interpolation_to_compose_strings # prefer
  - unnecessary_brace_in_string_interps # avoid
  - prefer_collection_literals
  - prefer_is_empty
  - prefer_is_not_empty
  - avoid_function_literals_in_foreach_calls # avoid
  - prefer_iterable_whereType
  - prefer_function_declarations_over_variables
  - unnecessary_lambdas
  - prefer_equal_for_default_values
  - avoid_init_to_null
  - unnecessary_getters_setters
  #- unnecessary_getters # prefer # Disabled pending fix: https://github.com/dart-lang/linter/issues/23
  # - prefer_expression_function_bodies # consider
  - unnecessary_this
  - prefer_initializing_formals
  - type_init_formals
  - empty_constructor_bodies
  - unnecessary_new
  - unnecessary_const
  - avoid_catches_without_on_clauses # avoid
  - avoid_catching_errors
  - use_rethrow_when_possible
  # DESIGN
  - use_to_and_as_if_applicable # prefer
  - one_member_abstracts # avoid
  - avoid_classes_with_only_static_members # avoid
  - prefer_mixin
  - prefer_final_fields # prefer
  - use_setters_to_change_properties
  - avoid_setters_without_getters
  - avoid_returning_null # avoid
  - avoid_returning_this # avoid
  - type_annotate_public_apis # prefer
  - prefer_typing_uninitialized_variables
  - omit_local_variable_types # avoid
  - avoid_types_on_closure_parameters # avoid
  - avoid_return_types_on_setters
  - prefer_generic_function_type_aliases
  # - avoid_private_typedef_functions # prefer
  - use_function_type_syntax_for_parameters # consider
  - avoid_positional_boolean_parameters # avoid
  - hash_and_equals
  - avoid_equals_and_hash_code_on_mutable_classes # avoid
  - avoid_null_checks_in_equality_operators
  # NON EFFECTIVE DART RULES
  - avoid_dynamic_calls
  - avoid_empty_else
  - avoid_print
  - avoid_relative_lib_imports
  - avoid_returning_null_for_future
  - avoid_slow_async_io
  - avoid_type_to_string
  - avoid_types_as_parameter_names
  - avoid_web_libraries_in_flutter
  - cancel_subscriptions
  - close_sinks
  - comment_references
  - control_flow_in_finally
  - empty_statements
  - invariant_booleans
  - iterable_contains_unrelated_type
  - list_remove_unrelated_type
  - literal_only_boolean_expressions
  - no_adjacent_strings_in_list
  - no_duplicate_case_values
  - no_logic_in_create_state
  - prefer_void_to_null
  - test_types_in_equals
  - throw_in_finally
  - unnecessary_statements
  - unrelated_type_equality_checks
  - unsafe_html
  - use_build_context_synchronously
  - use_key_in_widget_constructors
  - valid_regexps
  # Style rules
  - always_declare_return_types
  - always_put_control_body_on_new_line
  - always_put_required_named_parameters_first
  - always_require_non_null_named_parameters
  - annotate_overrides
  - avoid_annotating_with_dynamic
  - avoid_bool_literals_in_conditional_expressions
  - avoid_catches_without_on_clauses
  - avoid_classes_with_only_static_members
  - avoid_double_and_int_checks
  - avoid_equals_and_hash_code_on_mutable_classes
  - avoid_escaping_inner_quotes
  - avoid_field_initializers_in_const_classes
  - avoid_function_literals_in_foreach_calls
  - avoid_implementing_value_types
  - avoid_js_rounded_ints
  - avoid_multiple_declarations_per_line
  - avoid_positional_boolean_parameters
  - avoid_private_typedef_functions
  - avoid_redundant_argument_values
  - avoid_renaming_method_parameters
  - avoid_returning_null
  - avoid_returning_null_for_void
  - avoid_returning_this
  - avoid_shadowing_type_parameters
  - avoid_single_cascade_in_expression_statements
  - avoid_types_on_closure_parameters
  - avoid_unnecessary_containers
  - avoid_unused_constructor_parameters
  - avoid_void_async
  - await_only_futures
  - cascade_invocations
  - cast_nullable_to_non_nullable
  - conditional_uri_does_not_exist
  - constant_identifier_names
  - deprecated_consistency
  - do_not_use_environment
  - empty_catches
  - eol_at_end_of_file
  - exhaustive_cases
  - flutter_style_todos
  - join_return_with_assignment
  - leading_newlines_in_multiline_strings
  - library_private_types_in_public_api
  - missing_whitespace_between_adjacent_strings
  - no_default_cases
  - no_leading_underscores_for_library_prefixes
  - no_leading_underscores_for_local_identifiers
  - no_runtimeType_toString
  - noop_primitive_operations
  - null_check_on_nullable_type_parameter
  - null_closures
  - omit_local_variable_types
  - one_member_abstracts
  - only_throw_errors
  - overridden_fields
  - package_api_docs
  - package_prefixed_library_names
  - parameter_assignments
  - prefer_asserts_in_initializer_lists
  - prefer_asserts_with_message
  - prefer_conditional_assignment
  - prefer_const_constructors
  - prefer_const_constructors_in_immutables
  - prefer_const_declarations
  - prefer_const_literals_to_create_immutables
  - prefer_constructors_over_static_methods
  - prefer_contains
  - prefer_expression_function_bodies
  - prefer_final_fields
  - prefer_final_in_for_each
  - prefer_final_locals
  - prefer_for_elements_to_map_fromIterable
  - prefer_if_elements_to_conditional_expressions
  - prefer_if_null_operators
  - prefer_inlined_adds
  - prefer_int_literals
  - prefer_interpolation_to_compose_strings
  - prefer_is_not_operator
  - prefer_null_aware_method_calls
  - prefer_null_aware_operators
  - prefer_single_quotes
  - prefer_spread_collections
  - provide_deprecation_message
  - recursive_getters
  - require_trailing_commas
  - sized_box_for_whitespace
  - sized_box_shrink_expand
  - sort_child_properties_last
  - sort_constructors_first
  - sort_unnamed_constructors_first
  - tighten_type_of_initializing_formals
  - type_annotate_public_apis
  - unawaited_futures
  - unnecessary_await_in_return
  - unnecessary_brace_in_string_interps
  - unnecessary_constructor_name
  - unnecessary_late
  - unnecessary_null_aware_assignments
  - unnecessary_null_checks
  - unnecessary_null_in_if_null_operators
  - unnecessary_nullable_for_final_variable_declarations
  - unnecessary_overrides
  - unnecessary_parenthesis
  - unnecessary_raw_strings
  - unnecessary_string_escapes
  - unnecessary_string_interpolations
  - use_colored_box
  - use_decorated_box
  - use_enums
  - use_full_hex_values_for_flutter_colors
  - use_function_type_syntax_for_parameters
  - use_if_null_to_convert_nulls_to_bools
  - use_is_even_rather_than_modulo
  - use_late_for_private_fields_and_variables
  - use_named_constants
  - use_raw_strings
  - use_string_buffers
  - use_super_parameters
  - use_test_throws_matchers
  - use_to_and_as_if_applicable
  - void_checks
  - package_names
  - secure_pubspec_urls
  - sort_pub_dependencies
  - depend_on_referenced_packages
  - prefer_foreach